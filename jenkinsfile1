pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                // Checkout source code from version control (e.g., Git)
                checkout scm

                // Build the application (e.g., Maven, Gradle, or custom build script)
                sh 'mvn clean package'
            }
        }

        
        stage('Containerize') {
            steps {
                  sh 'docker build -t tomcat_build:${BUILD_NUMBER} .' 
                  withCredentials([usernamePassword(credentialsId: 'Dockerhub', passwordVariable: 'DockerhubPassword', usernameVariable: 'DockerhubUser')]) {
                  sh "docker login -u ${env.DockerhubUser} -p ${env.DockerhubPassword}"
                  sh 'docker tag tomcat_build:${BUILD_NUMBER} jnanaswaroop/tomcat:${BUILD_NUMBER}'
                  sh 'docker push jnanaswaroop/tomcat:${BUILD_NUMBER}'
                  }
            }
        }

        stage('Deploy') {
            agent {label 'Deploy'}
            steps {
                // Deploy the application to the Kubernetes cluster
                sh 'kubectl apply -f deployment.yaml'
            }
        }

        stage('Verify') {
            agent {label 'Deploy'}
            steps {
                // Run any post-deployment verification tests
                sh 'curl http://myapp-${BUILD_NUMBER}/health'
            }
        }
    }

    post {
        success {
            echo 'CI/CD pipeline succeeded!'
        }
        failure {
            echo 'CI/CD pipeline failed!'
        }
    }
}
